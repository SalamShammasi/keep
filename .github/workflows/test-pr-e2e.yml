name: Tests (E2E)

on:
  workflow_dispatch:
  push:
    paths:
      - 'keep/**'
  pull_request:
    paths:
      - 'keep/**'

env:
  PYTHON_VERSION: 3.11
  STORAGE_MANAGER_DIRECTORY: /tmp/storage-manager
  # MySQL server environment variables
  MYSQL_ROOT_PASSWORD: keep
  MYSQL_DATABASE: keep
  # Postgres environment variables
  POSTGRES_USER: keepuser
  POSTGRES_PASSWORD: keeppassword
  POSTGRES_DB: keepdb

jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        db_type: [mysql, postgres]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - uses: chartboost/ruff-action@v1
        with:
          src: "./keep"

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2
        with:
          path: .venv
          key: pydeps-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies using poetry
        run: poetry install --no-interaction --no-root --with dev

      - name: Install playwright with npx
        run: npx playwright install --with-deps

      - name: Install playwright dependencies
        run: poetry run playwright install

      - name: Set up Keep environment
        run: |
          docker-compose --project-directory . -f tests/e2e_tests/docker-compose-e2e-${{ matrix.db_type }}.yml up -d

      - name: Wait for database to be ready
        run: |
          # Add commands to wait for the database to be ready
          if [ "${{ matrix.db_type }}" == "mysql" ]; then
            until docker exec $(docker ps -qf "name=keep-database") mysqladmin ping -h "localhost" --silent; do
              echo "Waiting for MySQL to be ready..."
              sleep 2
            done
          elif [ "${{ matrix.db_type }}" == "postgres" ]; then
            until docker exec $(docker ps -qf "name=keep-database") pg_isready -h localhost -U keepuser; do
              echo "Waiting for Postgres to be ready..."
              sleep 2
            done
          fi

      - name: Run unit tests and report coverage
        run: |
          # Run the tests
          poetry run coverage run --branch -m pytest -s tests/e2e_tests/

      - name: Convert coverage results to JSON (for CodeCov support)
        run: poetry run coverage json --omit="keep/providers/*"

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          fail_ci_if_error: false # don't fail if we didn't manage to upload the coverage report
          files: coverage.json
          verbose: true

      - name: Tear down environment
        run: |
          docker-compose --project-directory . -f tests/e2e_tests/docker-compose-e2e-${{ matrix.db_type }}.yml down
